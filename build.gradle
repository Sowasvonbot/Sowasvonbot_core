plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'maven'
    id 'signing'
    id 'org.beryx.jlink' version '2.21.0'
}


group 'com.github.sowasvonbot'
version "0.0.3"

archivesBaseName = "sowasvonbot-main.core"

sourceCompatibility = 11

mainClassName = 'main.Main'

signing {
    sign configurations.archives
}

repositories {
    mavenCentral()
    jcenter()
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher{
        name = 'Sowasvonbot'
        jvmArgs = ['-Dlog4j.configurationFile=./log4j2.xml']
    }
    forceMerge('log4j-api')
}

run {
    standardInput = System.in
}


compileJava{
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath
        ]
    }
    options.encoding = 'UTF-8'
}

dependencies {
    implementation ('net.dv8tion:JDA:4.1.1_105') {
        exclude module: 'opus-java'
    }
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.0'
    compile group: 'org.json', name: 'json', version: '20190722'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}


// Add Javadoc JAR and sources JAR to artifact
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts {
    archives javadocJar, sourcesJar
}

// Build, sign, and upload
uploadArchives {
    repositories {
        mavenDeployer {

            // Sign POM
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            // Destination
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            // Add required metadata to POM
            pom.project {
                name 'Sowasvonbot-main.core'
                packaging 'jar'
                description 'Core of my Discord-Bot.'
                url 'https://github.com/Sowasvonbot/Sowasvonbot_core'

                scm {
                    connection 'scm:git:git://github.com/Sowasvonbot/Sowasvonbot_core.git'
                    developerConnection 'scm:git:ssh://github.com/Sowasvonbot/Sowasvonbot_core.git'
                    url 'https://github.com/Sowasvonbot/Sowasvonbot_core/tree/master'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'Sowasvonbot'
                        name 'Tobias Kleinert'
                        email 'tms.kleinert@gmx.de'
                        organization 'Sowasvonbot'
                        organizationUrl 'tk-industries.de'
                    }
                }
            }
        }
    }
}